/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordenamiento;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;

/**
 *
 * @author JoseDaniel
 */
public class FrmOrdenamiento extends javax.swing.JFrame {

    DefaultListModel modelo = new DefaultListModel();
    DefaultListModel modelo1 = new DefaultListModel();
    ArrayList<Integer> Datos = new ArrayList<>();
    int iteracion = 0;
    int lt[];
    int elementos = 0;
    int salir;
    int contador = 0;
    int variable = 0;
    int datos;
    int pos;
    int mitad;
    int menor = 0;
    int posicion;

    /**
     * lstNumeros.setModel(modelo); elementos = modelo.capacity(); Creates new
     * form FrmOrdenamiento
     */
    public FrmOrdenamiento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstNumeros = new javax.swing.JList();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        btnBuscarBinario = new javax.swing.JButton();
        btnOrdenamientoSeleccion = new javax.swing.JButton();
        btnOrdenamientoInsercion = new javax.swing.JButton();
        btnOrdenamientoCombinacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setViewportView(lstNumeros);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar Lineal");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBuscarMousePressed(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });

        btnBuscarBinario.setText("Buscar Binario");
        btnBuscarBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarBinarioActionPerformed(evt);
            }
        });

        btnOrdenamientoSeleccion.setText("Ordenamiento por Seleccion");
        btnOrdenamientoSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenamientoSeleccionActionPerformed(evt);
            }
        });

        btnOrdenamientoInsercion.setText("Ordenamiento por Insercion");
        btnOrdenamientoInsercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenamientoInsercionActionPerformed(evt);
            }
        });

        btnOrdenamientoCombinacion.setText("Ordenamiento por Combinacion");
        btnOrdenamientoCombinacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenamientoCombinacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnOrdenamientoInsercion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarBinario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOrdenamientoSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOrdenamientoCombinacion))
                            .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnAgregar)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(btnBuscarBinario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenamientoSeleccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenamientoInsercion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenamientoCombinacion)
                        .addContainerGap(116, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        modelo.addElement(txtNumero.getText());
        lstNumeros.setModel(modelo);
        elementos = modelo.capacity();

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        while ((iteracion <= elementos) && salir == 0) {
            lstNumeros.setSelectedIndex(iteracion);
            if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText())) {
                JOptionPane.showMessageDialog(null, iteracion);
                salir = 1;
            }
            iteracion++;
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void btnBuscarBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarBinarioActionPerformed
        while ((iteracion < elementos) && salir == 0) {

            mitad = (elementos + menor) / 2;
            lstNumeros.setSelectedIndex(mitad);

            if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText())) {
                JOptionPane.showMessageDialog(null, iteracion);
                salir = 1;
            } 
            else if (Integer.valueOf(txtBusqueda.getText()) > Integer.valueOf((int)lstNumeros.getSelectedValue())) {
                menor = mitad + 1;
                iteracion++;
            }
            else  {
                elementos = mitad - 1;
                iteracion++;
            }
        }
        lstNumeros.setSelectedIndex(0);

        if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText())) {
            JOptionPane.showMessageDialog(null, iteracion);
            salir = 1;
        }

        lstNumeros.setSelectedIndex(1);

        if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText())) {
            JOptionPane.showMessageDialog(null, iteracion);
            salir = 1;
        }


    }//GEN-LAST:event_btnBuscarBinarioActionPerformed

    private void btnOrdenamientoSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenamientoSeleccionActionPerformed
        contador = 0;
        variable = 0;

        lt = transformar();
        PrintList();
        for (int i = 0; i < lt.length - 1; i++) {
            int min = i;
            for (int j = i + 1; j < lt.length; j++) {
                if (lt[j] < lt[min]) {
                    min = j;
                    contador++;
                    PrintList();
                }
            }
            PrintList();
            int aux = lt[i];
            lt[i] = lt[min];
            lt[min] = aux;
            variable = contador;

        }


    }//GEN-LAST:event_btnOrdenamientoSeleccionActionPerformed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void btnOrdenamientoInsercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenamientoInsercionActionPerformed
        contador = 0;
        variable = 0;
        lt = transformar();
        PrintList();
        for (int j = 1; j < lt.length; j++) {
            datos = lt[j];
            int i = j - 1;
            while (i >= 0 && lt[i] > datos) {
                lt[i + 1] = lt[i];
                i--;
                contador++;
                PrintList();
            }
            lt[i + 1] = datos;
            variable = contador;
            PrintList();

        }


    }//GEN-LAST:event_btnOrdenamientoInsercionActionPerformed

    private void btnOrdenamientoCombinacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenamientoCombinacionActionPerformed
        
    }//GEN-LAST:event_btnOrdenamientoCombinacionActionPerformed

    public int[] transformar() {
        Object numeros[] = new Object[modelo.size()];
        numeros = modelo.toArray();
        int n[] = new int[modelo.size()];
        for (int i = 0; i < modelo.size(); i++) {
            n[i] = Integer.parseInt(numeros[i].toString());
        }
        return n;

    }

    public void PrintList() {
        iteracion++;
        String r = iteracion + "->";
        for (int f = 0; f < lt.length; f++) {
            r = r + lt[f] + "-";
        }
        modelo1.addElement(r + "\n");
        lstNumeros.setModel(modelo1);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmOrdenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmOrdenamiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarBinario;
    private javax.swing.JButton btnOrdenamientoCombinacion;
    private javax.swing.JButton btnOrdenamientoInsercion;
    private javax.swing.JButton btnOrdenamientoSeleccion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstNumeros;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
